version: '3.8'

services:
  inventory_manager:
    build:
      context: .
      dockerfile: ./build/dockerfiles/Dockerfile.app
    ports:
      - '8080:8080'
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: curl --fail -s localhost:8080/info/status || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    container_name: app-postgres
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_DB: ${APP_DATABASE_NAME}
      POSTGRES_USER: ${APP_DATABASE_USER}
      POSTGRES_PASSWORD: ${APP_DATABASE_PASSWORD}
    ports:
      - '5432:5432'
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-U',
          '${APP_DATABASE_USER}',
          '-d',
          '${APP_DATABASE_NAME}',
        ]
      interval: 3s
      timeout: 5s
      retries: 5

  cache:
    container_name: app-cache
    image: 'ghcr.io/microsoft/garnet'
    ulimits:
      memlock: -1
    restart: on-failure
    ports:
      - '6379:6379'
    volumes:
      - ./garnetdata:/data

  dbmigration:
    container_name: app-postgres-migration
    build:
      context: .
      dockerfile: ./build/dockerfiles/Dockerfile.migrate
    restart: on-failure
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  # otel:
  #   image: public.ecr.aws/zinclabs/openobserve:latest
  #   restart: on-failure
  #   environment:
  #     ZO_ROOT_USER_EMAIL: "root@example.com"
  #     ZO_ROOT_USER_PASSWORD: "Complexpass#123"
  #   ports:
  #     - "5080:5080"
  #   volumes:
  #     - ./otel_data:/data
